<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Concurrency on Living Systems_</title>
    <link>https://livesys.se/tags/concurrency/</link>
    <description>Recent content in Concurrency on Living Systems_</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Sep 2020 15:36:00 +0200</lastBuildDate>
    <atom:link href="https://livesys.se/tags/concurrency/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Crystal: Go-like concurrency with easier syntax</title>
      <link>https://livesys.se/posts/crystal-concurrency-easier-syntax-than-golang/</link>
      <pubDate>Sat, 05 Sep 2020 15:36:00 +0200</pubDate>
      <guid>https://livesys.se/posts/crystal-concurrency-easier-syntax-than-golang/</guid>
      <description>&lt;p&gt;I have been playing around a lot with concurrency in Go over the years,&#xA;resulting in libraries such as &lt;a href=&#34;https://scipipe.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SciPipe&lt;/a&gt;&#xA;,&#xA;&lt;a href=&#34;http://flowbase.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FlowBase&lt;/a&gt;&#xA; and&#xA;&lt;a href=&#34;https://github.com/rdfio/rdf2smw/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rdf2smw&lt;/a&gt;&#xA;. My main motivation for&#xA;looking into Go has been the possibility to use it as a more performant,&#xA;scaleable and type-safe alternative to Python for data heavy scripting&#xA;tasks in bioinformatics and other fields I&amp;rsquo;ve been dabbling in.&#xA;Especially as it makes it so easy to write concurrent and parallel code&#xA;in it. Be warned that this context is surely giving me some biases.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
