<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Galaxy on Living Systems_</title>
    <link>https://livesys.se/tags/galaxy/</link>
    <description>Recent content in Galaxy on Living Systems_</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Oct 2015 21:23:00 +0100</lastBuildDate>
    <atom:link href="https://livesys.se/tags/galaxy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wanted: Dynamic workflow scheduling</title>
      <link>https://livesys.se/posts/dynamic-workflow-scheduling/</link>
      <pubDate>Mon, 26 Oct 2015 21:23:00 +0100</pubDate>
      <guid>https://livesys.se/posts/dynamic-workflow-scheduling/</guid>
      <description>&lt;p&gt;&lt;p class=&#34;image&#34;&gt;&#xA;    &lt;img src=&#34;scheduling_unsplash-1.jpg&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Photo credits: &lt;a href=&#34;https://unsplash.com/whale&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matthew Smith&lt;/a&gt;&#xA; /&#xA;&lt;a href=&#34;https://unsplash.com/photos/OiiThC8Wf68&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Unsplash&lt;/a&gt;&#xA;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;In &lt;a href=&#34;https://jcheminf.springeropen.com/articles/10.1186/s13321-016-0179-6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;our work on automating machine learning computations in&#xA;cheminformatics with scientific workflow&#xA;tools&lt;/a&gt;&#xA;,&#xA;we have came to realize something; &lt;em&gt;Dynamic scheduling in scientific&#xA;workflow tools is very important and sometimes badly needed.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;What I mean is that &lt;em&gt;new tasks should be able to be scheduled during the&#xA;execution of a workflow, not just in its scheduling phase.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;What is striking is that far from all workflow tools allow this. Many&#xA;tools completely separate the execution into two stages:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Workflow tool makers: Allow defining data flow, not just task dependencies</title>
      <link>https://livesys.se/posts/workflows-dataflow-not-task-deps/</link>
      <pubDate>Wed, 10 Jun 2015 12:03:00 +0200</pubDate>
      <guid>https://livesys.se/posts/workflows-dataflow-not-task-deps/</guid>
      <description>&lt;h3 id=&#34;upsurge-in-workflow-tools&#34;&gt;Upsurge in workflow tools&lt;/h3&gt;&#xA;&lt;p&gt;&lt;p class=&#34;image&#34;&gt;&#xA;    &lt;img src=&#34;selection_201.png&#34; alt=&#34;Workflow tool&#xA;logos&#34;  class=&#34;align_right&#34; /&gt;&#xA;&lt;/p&gt;&#xA;There&#xA;seem to be a little upsurge in light-weight - often python-based -&#xA;workflow tools for data pipelines in the last couple of years:&#xA;Spotify&amp;rsquo;s &lt;a href=&#34;https://github.com/spotify/luigi&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Luigi&lt;/a&gt;&#xA;, OpenStack&amp;rsquo;s&#xA;&lt;a href=&#34;https://wiki.openstack.org/wiki/Mistral&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mistral&lt;/a&gt;&#xA;, Pinterest&amp;rsquo;s&#xA;&lt;a href=&#34;https://github.com/pinterest/pinball&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pinball&lt;/a&gt;&#xA;, and recently AirBnb&amp;rsquo;s&#xA;&lt;a href=&#34;https://github.com/airbnb/airflow&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Airflow&lt;/a&gt;&#xA;, to name a few. These are&#xA;all interesting tools, and it is an interesting trend for us at&#xA;&lt;a href=&#34;http://www.farmbio.uu.se/research/researchgroups/pb/?languageId=1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pharmbio&lt;/a&gt;&#xA;,&#xA;who try to see how we can use workflow tools to automate bio- and&#xA;cheminformatics tasks on compute clusters.&lt;/p&gt;</description>
    </item>
    <item>
      <title>(E)BNF parser for parts of the Galaxy ToolConfig syntax with ANTLR</title>
      <link>https://livesys.se/posts/ebnf-parser-for-galaxy-toolconfig-syntax-with-antlr/</link>
      <pubDate>Thu, 28 Jul 2011 09:46:00 +0200</pubDate>
      <guid>https://livesys.se/posts/ebnf-parser-for-galaxy-toolconfig-syntax-with-antlr/</guid>
      <description>&lt;p&gt;As&#xA;&lt;a href=&#34;http://saml.rilspace.com/fims-project-status-update-thinking-about-cli-wrapper-xml-formats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blogged&lt;/a&gt;&#xA;&#xA;earlier, I&amp;rsquo;m currently into parsing the syntax of some definitions for&#xA;the parameters and stuff of command line tools. As said in the linked&#xA;blog post, I was pondering whether to use the &lt;a href=&#34;https://bitbucket.org/galaxy/galaxy-central/wiki/ToolConfigSyntax&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Galaxy&#xA;Toolconfig&lt;/a&gt;&#xA;&#xA;format or the &lt;a href=&#34;http://www.docbook.org/tdg/en/html/cmdsynopsis.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DocBook CmdSynopsis&#xA;format&lt;/a&gt;&#xA;. It turned&#xA;out though Well, that cmdsynopsis lacks the option to specify a list of&#xA;valid choices, for a parameter, as is possible in the Galaxy ToolConfig&#xA;format (see&#xA;&lt;a href=&#34;http://wiki.g2.bx.psu.edu/Admin/Tools/Tool%20Config%20Syntax#A.3Coptions.3E_tag_set&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&#xA;),&#xA;and thus can be used to generate drop-down lists in wizards etc. which&#xA;is basically what I want to do &amp;hellip; so, now I&amp;rsquo;m going with the Galaxy&#xA;format after all.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Partial Galaxy ToolConfig to DocBook CmdSynopsis conversion with XSLT RegEx</title>
      <link>https://livesys.se/posts/galaxy-toolconfig-to-docbook-cmdsynopsis/</link>
      <pubDate>Thu, 21 Jul 2011 01:33:00 +0200</pubDate>
      <guid>https://livesys.se/posts/galaxy-toolconfig-to-docbook-cmdsynopsis/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;lt;tool&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;sam_to_bam&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;SAM-to-BAM&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;1.1.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;converts SAM format to BAM format&lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;requirements&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;requirement&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;package&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;gt;&lt;/span&gt;samtools&lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/requirement&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/requirements&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;command&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;interpreter=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sam_to_bam.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      --input1=$source.input1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      --dbkey=${input1.metadata.dbkey}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      #if $source.index_source == &amp;#34;history&amp;#34;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        --ref_file=$source.ref_file&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      #else&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        --ref_file=&amp;#34;None&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      #end if&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      --output1=$output1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      --index_dir=${GALAXY_DATA_INDEX_DIR}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/command&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;inputs&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;conditional&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;param&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;index_source&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;select&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;label=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;Choose the source for the reference list&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;option&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;cached&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;gt;&lt;/span&gt;Locally cached&lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;option&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;history&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;gt;&lt;/span&gt;History&lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;when&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;cached&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;param&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;input1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;format=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;sam&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;label=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;SAM File to Convert&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;validator&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;unspecified_build&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;validator&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;dataset_metadata_in_file&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;filename=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;sam_fa_indices.loc&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;metadata_name=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;dbkey&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;metadata_column=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;message=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;Sequences are not currently available for the specified build.&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;line_startswith=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/when&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;when&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;history&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;param&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;input1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;format=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;sam&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;label=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;Convert SAM file&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;param&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;ref_file&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;format=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;fasta&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;label=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;Using reference file&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/when&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/conditional&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/inputs&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;outputs&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;data&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;format=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;bam&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;output1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#836c28&#34;&gt;label=&lt;/span&gt;&lt;span style=&#34;color:#c41a16&#34;&gt;&amp;#34;${tool.name} on ${on_string}: converted BAM&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/outputs&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;&amp;lt;/xml&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;hellip; you see that in the &lt;strong&gt;command&lt;/strong&gt; tag, the actual syntax of the&#xA;command is specified in a kind of &amp;ldquo;free text&amp;rdquo; format &amp;hellip; This might&#xA;not be exactly what one might think to use XSLT transformations for, but&#xA;together with the regex functionality in XSLT 2.0 you definitely has&#xA;this option too. Helped by &lt;a href=&#34;http://www.xml.com/pub/a/2003/06/04/tr.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this&#xA;article&lt;/a&gt;&#xA; on xml.com, I put&#xA;together this little XSLT stylesheet for parsing up the free text&#xA;content of that command tag (haven&amp;rsquo;t got to the more detailed config&#xA;inside the inputs-tag in the galaxy format, but might not need either,&#xA;if staying with the galaxy format anyway):&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
