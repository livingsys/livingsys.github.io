<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Galaxy on Living Systems_</title>
    <link>https://livesys.se/tags/galaxy/</link>
    <description>Recent content in Galaxy on Living Systems_</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Oct 2015 21:23:00 +0100</lastBuildDate>
    <atom:link href="https://livesys.se/tags/galaxy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wanted: Dynamic workflow scheduling</title>
      <link>https://livesys.se/posts/dynamic-workflow-scheduling/</link>
      <pubDate>Mon, 26 Oct 2015 21:23:00 +0100</pubDate>
      <guid>https://livesys.se/posts/dynamic-workflow-scheduling/</guid>
      <description>Photo credits: Matthew Smith / Unsplash In our work on automating machine learning computations in cheminformatics with scientific workflow tools , we have came to realize something; Dynamic scheduling in scientific workflow tools is very important and sometimes badly needed.&#xA;What I mean is that new tasks should be able to be scheduled during the execution of a workflow, not just in its scheduling phase.&#xA;What is striking is that far from all workflow tools allow this.</description>
    </item>
    <item>
      <title>Workflow tool makers: Allow defining data flow, not just task dependencies</title>
      <link>https://livesys.se/posts/workflows-dataflow-not-task-deps/</link>
      <pubDate>Wed, 10 Jun 2015 12:03:00 +0200</pubDate>
      <guid>https://livesys.se/posts/workflows-dataflow-not-task-deps/</guid>
      <description>Upsurge in workflow tools There seem to be a little upsurge in light-weight - often python-based - workflow tools for data pipelines in the last couple of years: Spotify&amp;rsquo;s Luigi , OpenStack&amp;rsquo;s Mistral , Pinterest&amp;rsquo;s Pinball , and recently AirBnb&amp;rsquo;s Airflow , to name a few. These are all interesting tools, and it is an interesting trend for us at pharmbio , who try to see how we can use workflow tools to automate bio- and cheminformatics tasks on compute clusters.</description>
    </item>
    <item>
      <title>(E)BNF parser for parts of the Galaxy ToolConfig syntax with ANTLR</title>
      <link>https://livesys.se/posts/ebnf-parser-for-galaxy-toolconfig-syntax-with-antlr/</link>
      <pubDate>Thu, 28 Jul 2011 09:46:00 +0200</pubDate>
      <guid>https://livesys.se/posts/ebnf-parser-for-galaxy-toolconfig-syntax-with-antlr/</guid>
      <description>As blogged earlier, I&amp;rsquo;m currently into parsing the syntax of some definitions for the parameters and stuff of command line tools. As said in the linked blog post, I was pondering whether to use the Galaxy Toolconfig format or the DocBook CmdSynopsis format . It turned out though Well, that cmdsynopsis lacks the option to specify a list of valid choices, for a parameter, as is possible in the Galaxy ToolConfig format (see here ), and thus can be used to generate drop-down lists in wizards etc.</description>
    </item>
    <item>
      <title>Partial Galaxy ToolConfig to DocBook CmdSynopsis conversion with XSLT RegEx</title>
      <link>https://livesys.se/posts/galaxy-toolconfig-to-docbook-cmdsynopsis/</link>
      <pubDate>Thu, 21 Jul 2011 01:33:00 +0200</pubDate>
      <guid>https://livesys.se/posts/galaxy-toolconfig-to-docbook-cmdsynopsis/</guid>
      <description>&amp;lt;tool id=&amp;#34;sam_to_bam&amp;#34; name=&amp;#34;SAM-to-BAM&amp;#34; version=&amp;#34;1.1.1&amp;#34;&amp;gt; &amp;lt;description&amp;gt;converts SAM format to BAM format&amp;lt;/description&amp;gt; &amp;lt;requirements&amp;gt; &amp;lt;requirement type=&amp;#34;package&amp;#34;&amp;gt;samtools&amp;lt;/requirement&amp;gt; &amp;lt;/requirements&amp;gt; &amp;lt;command interpreter=&amp;#34;python&amp;#34;&amp;gt; sam_to_bam.py --input1=$source.input1 --dbkey=${input1.metadata.dbkey} #if $source.index_source == &amp;#34;history&amp;#34;: --ref_file=$source.ref_file #else --ref_file=&amp;#34;None&amp;#34; #end if --output1=$output1 --index_dir=${GALAXY_DATA_INDEX_DIR} &amp;lt;/command&amp;gt; &amp;lt;inputs&amp;gt; &amp;lt;conditional name=&amp;#34;source&amp;#34;&amp;gt; &amp;lt;param name=&amp;#34;index_source&amp;#34; type=&amp;#34;select&amp;#34; label=&amp;#34;Choose the source for the reference list&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;cached&amp;#34;&amp;gt;Locally cached&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;history&amp;#34;&amp;gt;History&amp;lt;/option&amp;gt; &amp;lt;/param&amp;gt; &amp;lt;when value=&amp;#34;cached&amp;#34;&amp;gt; &amp;lt;param name=&amp;#34;input1&amp;#34; type=&amp;#34;data&amp;#34; format=&amp;#34;sam&amp;#34; label=&amp;#34;SAM File to Convert&amp;#34;&amp;gt; &amp;lt;validator type=&amp;#34;unspecified_build&amp;#34; /&amp;gt; &amp;lt;validator type=&amp;#34;dataset_metadata_in_file&amp;#34; filename=&amp;#34;sam_fa_indices.loc&amp;#34; metadata_name=&amp;#34;dbkey&amp;#34; metadata_column=&amp;#34;1&amp;#34; message=&amp;#34;Sequences are not currently available for the specified build.</description>
    </item>
  </channel>
</rss>
