<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nextflow on Living Systems_</title>
    <link>https://livesys.se/tags/nextflow/</link>
    <description>Recent content in Nextflow on Living Systems_</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 May 2025 22:31:42 +0200</lastBuildDate>
    <atom:link href="https://livesys.se/tags/nextflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setting up the Nextflow Language Server (LSP) with NeoVim</title>
      <link>https://livesys.se/posts/nextflow-lsp-with-neovim/</link>
      <pubDate>Fri, 16 May 2025 22:31:42 +0200</pubDate>
      <guid>https://livesys.se/posts/nextflow-lsp-with-neovim/</guid>
      <description>&lt;p&gt;&lt;p class=&#34;image&#34;&gt;&#xA;    &lt;img src=&#34;screenshot.png&#34; alt=&#34;Screenshot of Nextflow LSP in NeoVim in action showing a context menu&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;It turns out it is actually super easy to get Nextflow code intelligence to&#xA;work in NeoVim now! This is thanks to the newly release language server.&lt;/p&gt;&#xA;&lt;p&gt;The focus has initially been on making this to work in VSCode, but through&#xA;some recent developments by the community, setting it up in NeoVim is also&#xA;pretty smooth.&lt;/p&gt;&#xA;&lt;p&gt;This is great for me who hardly can work outside the terminal, after having&#xA;just compounded too much effort into streamlining my workflow for terminal&#xA;based tools.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Troubleshooting Nextflow pipelines</title>
      <link>https://livesys.se/posts/troubleshooting-nextflow-pipelines/</link>
      <pubDate>Wed, 01 Nov 2023 11:47:00 +0100</pubDate>
      <guid>https://livesys.se/posts/troubleshooting-nextflow-pipelines/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;We have been evaluating Nextflow before in my work at&#xA;&lt;a href=&#34;https://pharmb.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pharmb.io&lt;/a&gt;&#xA;, but that was before&#xA;&lt;a href=&#34;https://www.nextflow.io/docs/latest/dsl1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DSL2&lt;/a&gt;&#xA; and the support&#xA;for re-usable modules (which was one reason we needed to develop our own&#xA;tools to support our challenges, as explained &lt;a href=&#34;https://doi.org/10.1093/gigascience/giz044&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;in the&#xA;paper&lt;/a&gt;&#xA;). Thus, there&amp;rsquo;s&#xA;definitely some stuff to get into.&lt;/p&gt;&#xA;&lt;p&gt;Based on my years in bioinformatics and data science, I&amp;rsquo;ve seen that&#xA;the number one skill that you need to develop is to be able to&#xA;effectively troubleshoot things, because things will invariably fail in&#xA;all kinds of ways. And in the process, you will probably learn a lot&#xA;about the technology stack you are using.&lt;/p&gt;</description>
    </item>
    <item>
      <title>First production run with SciPipe - A Go-based scientific workflow tool</title>
      <link>https://livesys.se/posts/first-production-workflow-run-with-scipipe/</link>
      <pubDate>Thu, 28 Sep 2017 19:32:00 +0200</pubDate>
      <guid>https://livesys.se/posts/first-production-workflow-run-with-scipipe/</guid>
      <description>&lt;p&gt;Today marked the day when we ran the very first production workflow with&#xA;&lt;a href=&#34;http://scipipe.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SciPipe&lt;/a&gt;&#xA;, the &lt;a href=&#34;https://golang.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go&lt;/a&gt;&#xA;-based&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Scientific_workflow_system&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scientific workflow&#xA;tool&lt;/a&gt;&#xA; we&amp;rsquo;ve&#xA;been working on over the last couple of years. Yay! :)&lt;/p&gt;&#xA;&lt;p&gt;This is how it looked (no fancy GUI or such yet, sorry):&lt;/p&gt;&#xA;&lt;p&gt;&lt;p class=&#34;image&#34;&gt;&#xA;    &lt;img src=&#34;terminal_411.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;The first result we got in this very very first job was a list of counts&#xA;of ligands (chemical compounds) in the &lt;a href=&#34;https://jcheminf.springeropen.com/articles/10.1186/s13321-017-0203-5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ExcapeDB&#xA;dataset&lt;/a&gt;&#xA;&#xA;(&lt;a href=&#34;https://zenodo.org/record/173258&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;download here&lt;/a&gt;&#xA;) interacting with the&#xA;44 protein/gene targets &lt;a href=&#34;http://dx.doi.org/10.1038/nrd3845&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;identified by Bowes et&#xA;al&lt;/a&gt;&#xA; as a good baseline set for&#xA;identifying hazardous side-effects effects in the body (that is, any&#xA;chemical compounds binding these proteins, will never become an approved&#xA;drug).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
