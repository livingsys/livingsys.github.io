<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Productivity on Living Systems_</title>
    <link>https://livesys.se/tags/productivity/</link>
    <description>Recent content in Productivity on Living Systems_</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 May 2024 12:44:00 +0200</lastBuildDate>
    <atom:link href="https://livesys.se/tags/productivity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>We need recipes for common bioinformatics tasks</title>
      <link>https://livesys.se/posts/bioinformatics-recipes/</link>
      <pubDate>Mon, 27 May 2024 12:44:00 +0200</pubDate>
      <guid>https://livesys.se/posts/bioinformatics-recipes/</guid>
      <description>&lt;p&gt;Ad-hoc tasks in bioinformatics can contain such an immense number of operations&#xA;and tasks that need to be performed to achieve a certain goal. Often these are&#xA;all individually regarded as rather &amp;ldquo;standard&amp;rdquo; or &amp;ldquo;routine&amp;rdquo;. Despite this,&#xA;it is quite hard to find an authoritative set of &amp;ldquo;recipes&amp;rdquo; for how to do such&#xA;tasks.&lt;/p&gt;&#xA;&lt;p&gt;Thus I was starting to think that there needs to be a collection of&#xA;bioinformatics &amp;ldquo;recipes&amp;rdquo;. A sort of &amp;ldquo;cookbook&amp;rdquo; for common&#xA;bioinformatics tasks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>To make computational lab note-taking happen, make the journal into a todo-list (a &#34;Todournal&#34;)</title>
      <link>https://livesys.se/posts/todournal/</link>
      <pubDate>Fri, 13 Apr 2018 16:15:00 +0200</pubDate>
      <guid>https://livesys.se/posts/todournal/</guid>
      <description>&lt;h2 id=&#34;good-lab-note-taking-is-hard&#34;&gt;Good lab note-taking is hard&lt;/h2&gt;&#xA;&lt;p&gt;Good note-taking is in my opinion as important for computational&#xA;research as for wet lab research. For computational research it is much&#xA;easier though to forget doing it, since you might not have a physical&#xA;notebook lying on your desk staring at you, but rather might need to&#xA;open a specific software or file, to write the notes. I think this is&#xA;one reason why lab note taking seems to happen a lot less among&#xA;computational scientists than among wet lab ditto.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The frustrating state of note taking tools</title>
      <link>https://livesys.se/posts/my-frustration-with-the-state-of-note-taking-tools/</link>
      <pubDate>Tue, 07 Nov 2017 18:45:00 +0100</pubDate>
      <guid>https://livesys.se/posts/my-frustration-with-the-state-of-note-taking-tools/</guid>
      <description>&lt;p&gt;One year left to the dissertation (we hope) and now turning from mostly&#xA;software development into more of data analysis and needing to read up quite a&#xA;pile of books and papers on my actual topic, pharmaceutical bioinformatics.&#xA;With this background, I&amp;rsquo;m feel forced to ponder ways to improving my note&#xA;taking workflow.&lt;!-- raw HTML omitted --&gt; I&amp;rsquo;m already quite happy with the way of taking notes&#xA;I&amp;rsquo;ve settled on, using a lot of drawings and often iterating over the same&#xA;notes multiple times to ask questions, fill in details, and figure out&#xA;connections. The main remaining question for me is instead about tools.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Time-boxing and a unified trello board = productivity</title>
      <link>https://livesys.se/posts/time-boxing-and-unified-trello-board/</link>
      <pubDate>Fri, 26 Feb 2016 12:40:00 +0100</pubDate>
      <guid>https://livesys.se/posts/time-boxing-and-unified-trello-board/</guid>
      <description>&lt;p&gt;&lt;p class=&#34;image&#34;&gt;&#xA;    &lt;img src=&#34;selection_039.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Figure:&lt;/strong&gt; Sketchy screenshot of how my current board looks. Notice&#xA;especially the &amp;ldquo;Now&amp;rdquo; stack, marked in yellow, where you are only&#xA;allowed to put &lt;strong&gt;one single&lt;/strong&gt; card.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;I used to have a very hard time getting an overview of my current work,&#xA;and prioritizing and concentrating on any single task for too long. I&#xA;always felt there might be something else that might be more important&#xA;than what I were currently doing. And in fact, how would I know if I&#xA;didn&amp;rsquo;t have the overview?&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to be productive in vim in 30 minutes</title>
      <link>https://livesys.se/posts/how-to-be-productive-in-vim-in-30-minutes/</link>
      <pubDate>Tue, 15 Sep 2015 12:21:00 +0200</pubDate>
      <guid>https://livesys.se/posts/how-to-be-productive-in-vim-in-30-minutes/</guid>
      <description>&lt;p&gt;&lt;p class=&#34;image&#34;&gt;&#xA;    &lt;img src=&#34;selection_333-1.png&#34; alt=&#34;&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;I had heard a lot of people say vim is very hard to learn, and got the&#xA;impression that it will take a great investment to switch to using it.&lt;/p&gt;&#xA;&lt;p&gt;While I have came to understand that they are right in that there is a&#xA;lot of things to invest in to get really great at using vim, that will&#xA;really pay back, I have also found out one thing that I see almost&#xA;no-one mentioning:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terminator as a middle-way between floating and tiling window managers</title>
      <link>https://livesys.se/posts/terminator-middle-way/</link>
      <pubDate>Fri, 17 Jul 2015 19:22:00 +0200</pubDate>
      <guid>https://livesys.se/posts/terminator-middle-way/</guid>
      <description>&lt;p&gt;I have tried hard to improve my linux desktop productivity by learning&#xA;to do as much as possible using keyboard shortcuts, aliases for terminal&#xA;commands etc etc (I even produced an &lt;a href=&#34;https://www.udemy.com/command-line-productivity/?couponCode=BlogR33ders&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;online course on linux commandline&#xA;productivity&lt;/a&gt;&#xA;).&lt;/p&gt;&#xA;&lt;p&gt;In this spirit, I naturally tried out a so called &lt;a href=&#34;https://www.udemy.com/command-line-productivity&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tiling window&#xA;manager&lt;/a&gt;&#xA; (aka tiling&#xA;wm). In short, a tiling wm organizes all open windows on the screen (or&#xA;on the current desktop) into a &amp;ldquo;tiled&amp;rdquo; grid of frames. You can then&#xA;control how these frames are created, resized, as well as switch focus&#xA;between the frames, all using keyboard shortcuts. This allows you to&#xA;avoid leaving the keyboard for moving windows around or resizing them,&#xA;before starting your work in a new program.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A few thoughts on organizing computational (biology) projects</title>
      <link>https://livesys.se/posts/organizing-compbio-projects/</link>
      <pubDate>Tue, 23 Jun 2015 20:32:00 +0200</pubDate>
      <guid>https://livesys.se/posts/organizing-compbio-projects/</guid>
      <description>&lt;p&gt;&lt;p class=&#34;image&#34;&gt;&#xA;    &lt;img src=&#34;-bin-bash_251-1.png&#34; alt=&#34;Screenshot of paper and a directory structure in a terminal&#34;  /&gt;&#xA;&lt;/p&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;I read this &lt;a href=&#34;http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1000424&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;excellent&#xA;article&lt;/a&gt;&#xA;&#xA;with practical recommendations on how to organize a computational project, in&#xA;terms of directory structure.&lt;/p&gt;&#xA;&lt;h2 id=&#34;directory-structure-matters&#34;&gt;Directory structure matters&lt;/h2&gt;&#xA;&lt;p&gt;The importance of a good directory structure seems to often be&#xA;overlooked in teaching about computational biology, but can be the&#xA;difference between a successful project, and one where every change or&#xA;re-run of some part of a workflow, will require days of manual fiddling&#xA;to get hand on the right data, in the right format, in the right place,&#xA;with the right version of the workflow, with the right parameters, and&#xA;then succeed to run it without errors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The role of simplicity in testing and automation</title>
      <link>https://livesys.se/posts/the-role-of-simplicity-in-testing-and-automation/</link>
      <pubDate>Mon, 23 Mar 2015 20:46:00 +0100</pubDate>
      <guid>https://livesys.se/posts/the-role-of-simplicity-in-testing-and-automation/</guid>
      <description>&lt;p&gt;Disclaimer: Don&amp;rsquo;t take this too seriously &amp;hellip; this is&#xA;&amp;ldquo;thinking-in-progress&amp;rdquo; :)&lt;/p&gt;&#xA;&lt;p&gt;It just struck me the other minute, how simplicity is the key theme&#xA;behind two very important areas in software development, that I&amp;rsquo;ve been&#xA;dabbling with quite a bit recently: Testing, and automation.&lt;/p&gt;&#xA;&lt;p&gt;Have you thought about how testing, in its essence, is: &lt;em&gt;Wrapping&#xA;&lt;strong&gt;complex&lt;/strong&gt; code, which you can&amp;rsquo;t mentally comprehend completely, in&#xA;&lt;strong&gt;simple&lt;/strong&gt; code, that you can mentally comprehend, at least one test at&#xA;a time.&lt;/em&gt; Because, after all, if you can&amp;rsquo;t easily comprehend your test&#xA;code, as to make sure it is correct, by simply looking at it, you will&#xA;have to &lt;em&gt;create even simpler tests that test your tests&lt;/em&gt;!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
